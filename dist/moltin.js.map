{"version":3,"file":null,"sources":["../src/config.js","../src/factories/storage.js","../src/factories/request.js","../src/abstract.js","../src/endpoints/products.js","../src/endpoints/currencies.js","../src/endpoints/brands.js","../src/endpoints/cart.js","../src/endpoints/categories.js","../src/endpoints/collections.js","../src/endpoints/orders.js","../src/moltin.js"],"sourcesContent":["class Config {\n  constructor(options) {\n    this.clientId = options.publicId;\n    this.clientSecret = options.secretKey;\n    this.host = 'api-dev.moltin.com';\n    this.port = '443';\n    this.protocol = 'http';\n    this.version = 'v2';\n    this.debug = false;\n    this.currency = options.currency;\n    this.language = false;\n    this.timeout = 60000;\n    this.contentType = 'application/json';\n    this.auth = {\n      expires: 3600,\n      uri: 'oauth/access_token'\n    };\n    this.methods = ['GET', 'POST', 'PUT', 'DELETE'];\n  }\n}\n\nexport default Config;\n","/* jshint node: true */\n\nclass StorageFactory {\n  constructor() {\n    if (typeof localStorage === 'undefined' || localStorage === null) {\n      const LocalStorage = require('node-localstorage').LocalStorage;\n\n      this.localStorage = new LocalStorage('./localStorage');\n    } else {\n      this.localStorage = window.localStorage;\n    }\n  }\n\n  set(key, value) {\n    return this.localStorage.setItem(key, value);\n  }\n\n  get(key) {\n    return this.localStorage.getItem(key);\n  }\n\n  delete(key) {\n    return this.localStorage.removeItem(key);\n  }\n}\n\nexport default StorageFactory;\n","import fetch from 'fetch-everywhere';\nimport Promise from 'es6-promise';\n\nimport StorageFactory from './storage';\n\nclass RequestFactory {\n  constructor(config) {\n    this.config = config;\n\n    this.storage = new StorageFactory();\n  }\n\n  authenticate() {\n    const config = this.config;\n    const storage = this.storage;\n\n    if (config.clientId.length <= 0) {\n      throw new Error('You must have a client id set');\n    }\n\n    const body = {\n      grant_type: config.clientSecret ? 'client_credentials' : 'implicit',\n      client_id: config.clientId,\n    };\n\n    if (config.clientSecret) {\n      body['client_secret'] = config.clientSecret;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n      fetch(`${config.protocol}://${config.host}/${config.auth.uri}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: Object.keys(body).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(body[k])}`).join('&')\n      })\n      .then((response) => {\n        if (response.status === 200) {\n          const data = response.json();\n\n          resolve(data);\n        }\n      })\n      .then(null, error => reject(error));\n    });\n\n    promise.then((data) => {\n      storage.set('mtoken', data.access_token);\n      storage.set('mexpires', data.expires);\n    });\n\n    return promise;\n  }\n\n  send(uri, method, body) {\n    const config = this.config;\n    const storage = this.storage;\n\n    const promise = new Promise((resolve, reject) => {\n      const req = function() {\n        const headers = {\n          'Authorization': `Bearer: ${storage.get('mtoken')}`,\n          'Content-Type': config.contentType\n        };\n\n        if (config.currency) {\n          headers['X-MOLTIN-CURRENCY'] = config.currency;\n        }\n\n        if ( method === 'POST' || method === 'PUT' ) {\n          body = `{\"data\":${JSON.stringify(body)}}`;\n        }\n\n        fetch(`${config.protocol}://${config.host}/${config.version}/${uri}`, {\n          method: method.toUpperCase(),\n          headers: headers,\n          body: body\n        })\n        .then((response) => {\n          resolve(response.json());\n        })\n        .catch(error => reject(error));\n      };\n\n      if (!storage.get('mtoken') || Date.now().toString() >= storage.get('mexpires')) {\n        return this.authenticate()\n          .then(req)\n          .catch(error => reject(error));\n      } else {\n        req();\n      }\n    });\n\n    return promise;\n  }\n}\n\nexport default RequestFactory;\n","import RequestFactory from './factories/request';\n\nclass Abstract {\n  constructor(config) {\n    this.request = new RequestFactory(config);\n\n    this.config = config;\n  }\n\n  Get(id, params) {\n    if (this.endpoint === 'carts') {\n      return this.request.send(`${this.endpoint}/${this.cartId}`, 'GET');\n    }\n\n    if (params) {\n      const includes = params.toString();\n\n      return this.request.send(`${this.endpoint}/${id}?include=${includes}`, 'GET');\n    }\n\n    return this.request.send(`${this.endpoint}/${id}`, 'GET');\n  }\n\n  List(params) {\n    if (params) {\n      const includes = params.toString();\n\n      return this.request.send(`${this.endpoint}?include=${includes}`, 'GET');\n    }\n\n    return this.request.send(`${this.endpoint}`, 'GET');\n  }\n}\n\nexport default Abstract;\n","import Abstract from '../abstract';\n\nclass ProductsEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'products';\n  }\n}\n\nexport default ProductsEndpoint;\n","import Promise from 'es6-promise';\n\nimport Abstract from '../abstract';\nimport StorageFactory from '../factories/storage';\n\nclass CurrenciesEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'currencies';\n    this.storage = new StorageFactory();\n  }\n\n  Set(currency) {\n    const storage = this.storage;\n    const config = this.config;\n\n    storage.set('mcurrency', currency);\n    config.currency = currency;\n\n    const promise = new Promise((resolve, reject) => {\n      const request = storage.get('mcurrency');\n\n      try {\n        resolve(request);\n      } catch(err) {\n        reject(new Error(err));\n      }\n    });\n\n    return promise;\n  }\n\n  Active() {\n    const storage = this.storage;\n\n    const promise = new Promise((resolve, reject) => {\n      const request = storage.get('mcurrency');\n\n      try {\n        resolve(request);\n      } catch(err) {\n        reject(new Error(err));\n      }\n    });\n\n    return promise;\n  }\n}\n\nexport default CurrenciesEndpoint;\n","import Abstract from '../abstract';\n\nclass BrandsEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'brands';\n  }\n}\n\nexport default BrandsEndpoint;\n","import Abstract from '../abstract';\nimport StorageFactory from '../factories/storage';\n\nclass CartEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'carts';\n    this.storage = new StorageFactory();\n    this.cartId = this.identifier();\n  }\n\n  identifier(reset = false, id = false) {\n    const storage = this.storage;\n\n    if (!reset && !id && storage.get('mcart') !== null) {\n      return storage.get('mcart');\n    }\n\n    if (!id) {\n      id = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'.replace(/[x]/g, () => (Math.random() * 16 | 0).toString(16));\n    }\n\n    storage.set('mcart', id);\n\n    return id;\n  }\n\n  Contents() {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'GET');\n  }\n\n  Insert(id, quantity) {\n    const productObject = {\n      id: id,\n      quantity: parseInt(quantity) || 1\n    };\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items`, 'POST', productObject);\n  }\n\n  Remove(id) {\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${id}`, 'DELETE');\n  }\n\n  Quantity(id, quantity) {\n    const productObject = {\n      quantity: parseInt(quantity)\n    };\n\n    return this.request.send(`${this.endpoint}/${this.cartId}/items/${id}`, 'PUT', productObject);\n  }\n\n  Complete(data) {\n    return this.request.send(`${this.endpoint}/${this.cartId}/checkout`, 'POST', data);\n  }\n\n  Delete() {\n    return this.request.send(`${this.endpoint}/${this.cartId}`, 'DELETE');\n  }\n}\n\nexport default CartEndpoint;\n","import Abstract from '../abstract';\n\nclass CategoriesEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'categories';\n  }\n\n  Tree() {\n    return this.request.send(`${this.endpoint}/tree`, 'GET');\n  }\n}\n\nexport default CategoriesEndpoint;\n","import Abstract from '../abstract';\n\nclass CollectionsEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'collections';\n  }\n}\n\nexport default CollectionsEndpoint;\n","import Abstract from '../abstract';\n\nclass OrdersEndpoint extends Abstract {\n  constructor(endpoint) {\n    super(endpoint);\n\n    this.endpoint = 'orders';\n  }\n\n  Payment(id, data) {\n    return this.request.send(`${this.endpoint}/${id}/payments`, 'POST', data);\n  }\n}\n\nexport default OrdersEndpoint;\n","import Config from './config';\nimport RequestFactory from './factories/request';\nimport StorageFactory from './factories/storage';\nimport ProductsEndpoint from './endpoints/products';\nimport CurrenciesEndpoint from './endpoints/currencies';\nimport BrandsEndpoint from './endpoints/brands';\nimport CartEndpoint from './endpoints/cart';\nimport CategoriesEndpoint from './endpoints/categories';\nimport CollectionsEndpoint from './endpoints/collections';\nimport OrdersEndpoint from './endpoints/orders';\n\nclass Moltin {\n  constructor(config) {\n    this.config = config;\n    this.request = new RequestFactory(config);\n    this.storage = new StorageFactory();\n\n    this.Products = new ProductsEndpoint(config);\n    this.Currencies = new CurrenciesEndpoint(config);\n    this.Brands = new BrandsEndpoint(config);\n    this.Cart = new CartEndpoint(config);\n    this.Categories = new CategoriesEndpoint(config);\n    this.Collections = new CollectionsEndpoint(config);\n    this.Orders = new OrdersEndpoint(config);\n  }\n\n  // Expose `authenticate` function on the Moltin class\n  Authenticate() {\n    return this.request.authenticate();\n  }\n}\n\n// Export a function to instantiate the Moltin class\nconst gateway = config => new Moltin(new Config(config));\n\nexport { gateway };\n"],"names":["Config","options","this","clientId","publicId","clientSecret","secretKey","host","port","protocol","version","debug","currency","language","timeout","contentType","auth","expires","uri","methods","StorageFactory","localStorage","LocalStorage","require","window","set","key","value","setItem","get","getItem","delete","removeItem","RequestFactory","config","storage","authenticate","length","Error","body","grant_type","client_id","promise","Promise","resolve","reject","fetch","method","headers","Content-Type","Object","keys","map","k","encodeURIComponent","join","then","response","status","data","json","error","access_token","send","req","Authorization","JSON","stringify","toUpperCase","catch","Date","now","toString","Abstract","request","Get","id","params","endpoint","includes","List","ProductsEndpoint","super","CurrenciesEndpoint","Set","const","err","Active","BrandsEndpoint","CartEndpoint","cartId","identifier","reset","replace","Math","random","Contents","Insert","quantity","productObject","parseInt","Remove","Quantity","Complete","Delete","CategoriesEndpoint","Tree","CollectionsEndpoint","OrdersEndpoint","Payment","Moltin","Products","Currencies","Brands","Cart","Categories","Collections","Orders","Authenticate","gateway"],"mappings":"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"}